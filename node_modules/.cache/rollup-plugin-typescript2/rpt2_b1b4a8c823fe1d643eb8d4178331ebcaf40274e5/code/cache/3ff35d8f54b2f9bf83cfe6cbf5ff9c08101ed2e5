{"code":"import React from \"react\";\r\nimport \"./button.css\";\r\n;\r\n/**\r\n * Primary UI component for user interaction\r\n */\r\nvar Button = function (_a) {\r\n    var _b = _a.primary, primary = _b === void 0 ? true : _b, backgroundColor = _a.backgroundColor, _c = _a.size, size = _c === void 0 ? \"medium\" : _c, onClick = _a.onClick, label = _a.label;\r\n    var mode = primary\r\n        ? \"storybook-button--primary\"\r\n        : \"storybook-button--secondary\";\r\n    return (React.createElement(\"button\", { type: \"button\", className: [\"storybook-button\", \"storybook-button--\" + size, mode].join(\" \"), style: backgroundColor ? { backgroundColor: backgroundColor } : {}, onClick: onClick }, label));\r\n};\r\nexport default Button;\r\n","references":["/home/think/dev/my-reac-lib/react-test-1/node_modules/@types/react/index.d.ts"],"dts":{"name":"/home/think/dev/my-reac-lib/react-test-1/lib/components/Button/Button.d.ts","writeByteOrderMark":false,"text":"import React from \"react\";\r\nimport \"./button.css\";\r\nexport interface ButtonProps {\r\n    /**\r\n     * Is this the principal call to action on the page?\r\n     */\r\n    primary?: boolean;\r\n    /**\r\n     * What background color to use\r\n     */\r\n    backgroundColor?: string;\r\n    /**\r\n     * How large should the button be?\r\n     */\r\n    size?: \"small\" | \"medium\" | \"large\";\r\n    /**\r\n     * Button contents\r\n     */\r\n    label: string;\r\n    /**\r\n     * Optional click handler\r\n     */\r\n    onClick?: (event: React.MouseEvent<HTMLButtonElement, MouseEvent>) => void;\r\n}\r\n/**\r\n * Primary UI component for user interaction\r\n */\r\ndeclare const Button: ({ primary, backgroundColor, size, onClick, label, }: ButtonProps) => JSX.Element;\r\nexport default Button;\r\n"}}
